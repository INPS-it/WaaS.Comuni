openapi: 3.0.3
info:
  title: Welfare as a Service - API WAAS-SIUSS-Alimentazione
  version: 2.0.0
  termsOfService: "url-terms-of-service"
  x-summary: API di Interscambio dati Welfare per i Welfare Provider
  contact:
    email: progettowelfareasaservice@inps.it
  x-api-id: waas-siuss-alimentazione
  description: |-
    # API di Interscambio dati Welfare per i Welfare Provider 

    Il progetto “Welfare As a Service” ha obiettivo di realizzare la condivisione e l’interoperabilità delle banche dati a livello centrale e locale tra INPS, gli Enti locali e le altre amministrazioni centrali della comunità digitale del welfare. Componente centrale del progetto è pertanto una banca dati integrata di tutte le informazioni presenti sul territorio. La banca dati viene tenuta regolarmente aggiornata da INPS, utilizzando una API di interscambio esposta da tutti i ssoggetti interessati tramite la Piattaforma Nazionale Digitale dei Dati (PDND).

    La API di interscambio è basata su un’interfaccia standard Openapi 3 conforme alle linee guida AGID per l’interoperabilità (MODI).

    Le entry oggetto di scambio sono elementi unitari JSON che includono un ﬂusso codificato in base64, conforme alla specifica del “*DM 206 del 2014*” per il ‘Sistema Informativo delle prestazioni e dei bisogni sociali (SIUSS)'. In accordo a tale specifica sono previste due tipologie di flusso:

    - **PS-PSA-SINA** → oggetto XML codificato in accordo al formato PS\_PSA2016\_SINA.xsd

    - **SINBA** → oggetto XML codificato in accordo al formato SINBA.xsd

    La API sarà erogata da tutti gli enti locali aderenti al progetto e sarà interrogata periodicamente da INPS al ﬁne di acquisire gli aggiornamenti maturati nell’ultimo intervallo di tempo. La richiesta in arrivo da INPS sarà corredata del timestamp relativo all’ultimo ﬂusso acquisito. L’Ente locale deve pertanto utilizzare tale riferimento temporale per individuare gli aggiornamenti da fornire in risposta all’interrogazione ricevuta.

    Per ulteriori dettagli tecnici e per gli schemi sintattici dei flussi da produrre, fare riferimento al seguente indirizzo:
    - https://www.inps.it/dati-ricerche-e-bilanci/siuss-ex-casellario-dellassistenza/specifiche-tecniche
tags:
- name: Flussi
- name: Esiti
servers:
- url: https://api.example.com/waas/v1
  description: server della generica PAL
paths:
  /flussi:
    get:
      security:
        - PDND: []
      summary: "Restituisce i flussi della PAL ordinati cronologicamente"
      description: |-
        Per ogni richiesta ricevuta da INPS, la API dell’Ente locale verifica se sono presenti ﬂussi aggiornati successivamente al timestamp ricevuto nel parametro ‘since’:
          - se sono presenti aggiornamenti, l’implementazione della API predispone la risposta con un elenco di tali flussi, codificati come elementi JSON, includendo all’interno di ognuno di tali flussi anche l’elemento ‘base64’ contenente il ﬂusso PS-PSA-SINA o SINBA, che riporta le informazioni di dettaglio della specifica posizione da comunicare;
          - se non sono presenti aggiornamenti, la risposta da restituire ad INPS sarà una risposta vuota; tale risposta indicherà ad INPS di sospendere le interrogazioni all’Ente ﬁno alla prossima scadenza di interrogazione prevista per quell’Ente.
      operationId: Flussi
      tags:
      - Flussi
      parameters:
        - name: limit
          in: query
          required: false
          description:  parametro opzionale che speciﬁca il massimo numero di entry che il comune deve restituire con la singola chiamata. Se non speciﬁcato il valore di default è fissato a 10 entry.
          schema:
            type: integer
            format: int32
            default: 10
            example: 10
            minimum: 0
            maximum: 100
        - name: since
          in: query
          required: true
          description: >
            Parametro obbligatorio che indica il timestamp relativo all’ultima entry acquisita da INPS. L’Ente dovrà quindi fornire i flussi con data di aggiornamento immediatamente successiva al valore ricevuto da INPS. In caso di prima acquisizione il valore sarà impostato a '0'.
          schema:
            $ref: '#/components/schemas/UnixTimestamp'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entries'
              examples:
                RispostaConFlussi:
                  value:
                    elenco_flussi:
                    - codice_ente: H501
                      denominazione_ente: Comune di Roma
                      id_flusso: H501.PS.20210520.0000002
                      ts_flusso: "2023-11-27T11:04:56.852Z"
                      tipo: PS_PSA_SINA
                      flusso: >-
                       PEZsdXNzbyB4bWxucz0iaHR0cDovL2lucHMuaXQvQ2FzZWxsYXJpbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vaW5wcy5pdC9DYXNlbGxhcmlvIj4KPElkZW50aWZpY2F6aW9uZUZsdXNzbyBOb21lPSJINTAxLlBTLjIwMjEwNTIwLjAwMDAwMDIiPgo8RW50ZSBEZW5vbWluYXppb25lPSJhYWFhYSIgQ29kaWNlPSJINTAxIiBDRk9wZXJhdG9yZT0iQ0NDREREMjVBNDJIMTk5WCIgSW5kaXJpenpvPSJINTAxIi8+CjwvSWRlbnRpZmljYXppb25lRmx1c3NvPgo8QmVuZWZpY2lhcmlvIENvZGljZUZpc2NhbGU9IkFBQUJCQjM5TTY2QTM1MUMiPgo8QW5hZ3JhZmljYSBBbm5vTmFzY2l0YT0iMTkzOSIgR2VuZXJlPSIyIiBDb2RpY2VDaXR0YWRpbmFuemE9IjM4MCIgTm9tZT0iQkJCIiBMdW9nb05hc2NpdGE9IkEzNTEiIENvZ25vbWU9IkFBQSIvPgo8SW5kaXJpenpvIENvZGljZUNvbXVuZT0iMDY4MDAxIiBDb2RpY2VOYXppb25lPSIzODAiIENvZGljZVJlZ2lvbmU9IjAxIi8+CjxQcmVzdGF6aW9uaVNvY2lhbGkgQ2FyYXR0ZXJlUHJlc3RhemlvbmU9IjEiIEFyZWFVdGVuemE9IjIiIEltcG9ydG9RdW90YVV0ZW50ZT0iMjEuNzEiIEltcG9ydG9RdW90YVJpY2hpZXN0YT0iMTUxLjY0IiBUaXBvT3BlcmF6aW9uZT0iSSIgRGF0YUluaXppb1ByZXN0YXppb25lPSIyMDIwLTEwLTE0IiBDb2RpY2VQcmVzdGF6aW9uZT0iQTEuMTYiIERlbm9taW5hemlvbmVQcmVzdGF6aW9uZT0iQ29udHJpYnV0aSBlY29ub21pY2kgcGVyIHNlcnZpemlvIHRyYXNwb3J0byBlIG1vYmlsaXTDoCIgUHJvdG9jb2xsb0RvbWFuZGE9IjEyMzU2TWFyaSIgRGF0YUV2ZW50bz0iMjAyMC0xMC0xMyIgSW1wb3J0b01lbnNpbGU9IjEwMS4yMyIgSW1wb3J0b1F1b3RhU1NOPSIwLjAiIFBlcmlvZG9Fcm9nYXppb25lPSIxIiBJbXBvcnRvU29nbGlhSVNFRT0iMTcwMDAuMCIgUHJlc2FDYXJpY289IjEiIERhdGFGaW5lUHJlc3RhemlvbmU9IjIwMjAtMTEtMTMiIEltcG9ydG9RdW90YUVudGU9IjUyLjU0IiBQcmVzZW56YVByb3ZhTWV6emk9IjIiIE9yZVNlcnZpemlvTWVuc2lsZT0iMi41OSI+CjxTSU5BIE5lY2Vzc2l0YUN1cmVTYW5pdGFyaWU9IjEiIEZvbnRlRGVyaXZhemlvbmVJbnZhbGlkaXRhPSIxIiBBcmVhUmVkZGl0dWFsZT0iMSIgRGlzdHVyYmlBcmVhQ29nbml0aXZhPSIxIiBTdHJ1bWVudG9WYWx1dGF6aW9uZT0iMSIgRm9udGVEZXJpdmF6aW9uZVZhbHV0YXppb25lPSIxIiBBcmVhU3VwcG9ydG89IjEiIE1vYmlsaXRhPSIxIiBEaXN0dXJiaUNvbXBvcnRhbWVudGFsaT0iMSIgQXR0aXZpdGFWaXRhUXVvdGlkaWFuYT0iMSI+CjxOZWNlc3NpdGFJbnRlcnZlbnRpU29jaWFsaT4KPENvZGljZVByZXN0YXppb25lPkEyLjE3PC9Db2RpY2VQcmVzdGF6aW9uZT4KPENvZGljZVByZXN0YXppb25lPkEyLjE4PC9Db2RpY2VQcmVzdGF6aW9uZT4KPC9OZWNlc3NpdGFJbnRlcnZlbnRpU29jaWFsaT4KPEludmFsaWRpdGFDaXZpbGU+CjxJbnZDaXY+MTwvSW52Q2l2Pgo8SW52Q2l2PjM8L0ludkNpdj4KPC9JbnZhbGlkaXRhQ2l2aWxlPgo8L1NJTkE+CjwvUHJlc3RhemlvbmlTb2NpYWxpPgo8UHJlc3RhemlvbmlTb2NpYWxpIENhcmF0dGVyZVByZXN0YXppb25lPSIxIiBBcmVhVXRlbnphPSIyIiBJbXBvcnRvUXVvdGFVdGVudGU9IjIxLjcxIiBJbXBvcnRvUXVvdGFSaWNoaWVzdGE9IjE1MS42NCIgVGlwb09wZXJhemlvbmU9IkkiIERhdGFJbml6aW9QcmVzdGF6aW9uZT0iMjAyMC0xMS0xNCIgQ29kaWNlUHJlc3RhemlvbmU9IkEyLjE2IiBEZW5vbWluYXppb25lUHJlc3RhemlvbmU9IkludGVydmVudGkgZGkgc3VwcG9ydG8gcGVyIHJlcGVyaW1lbnRvIGFsbG9nZ2kiIFByb3RvY29sbG9Eb21hbmRhPSIxMjM1Nk1hcmkiIERhdGFFdmVudG89IjIwMjAtMTAtMTMiIEltcG9ydG9NZW5zaWxlPSIxMDEuMjMiIEltcG9ydG9RdW90YVNTTj0iMjYuOTgiIFBlcmlvZG9Fcm9nYXppb25lPSIxIiBJbXBvcnRvU29nbGlhSVNFRT0iMTcwMDAuMCIgUHJlc2FDYXJpY289IjEiIERhdGFGaW5lUHJlc3RhemlvbmU9IjIwMjAtMTItMTMiIEltcG9ydG9RdW90YUVudGU9IjUyLjU0IiBQcmVzZW56YVByb3ZhTWV6emk9IjIiIE9yZVNlcnZpemlvTWVuc2lsZT0iMi41OSI+CjxTSU5BIE5lY2Vzc2l0YUN1cmVTYW5pdGFyaWU9IjEiIEZvbnRlRGVyaXZhemlvbmVJbnZhbGlkaXRhPSIxIiBBcmVhUmVkZGl0dWFsZT0iMSIgRGlzdHVyYmlBcmVhQ29nbml0aXZhPSIxIiBTdHJ1bWVudG9WYWx1dGF6aW9uZT0iMSIgRm9udGVEZXJpdmF6aW9uZVZhbHV0YXppb25lPSIxIiBBcmVhU3VwcG9ydG89IjEiIE1vYmlsaXRhPSIxIiBEaXN0dXJiaUNvbXBvcnRhbWVudGFsaT0iMSIgQXR0aXZpdGFWaXRhUXVvdGlkaWFuYT0iMSI+CjxOZWNlc3NpdGFJbnRlcnZlbnRpU29jaWFsaT4KPENvZGljZVByZXN0YXppb25lPkEyLjE3PC9Db2RpY2VQcmVzdGF6aW9uZT4KPC9OZWNlc3NpdGFJbnRlcnZlbnRpU29jaWFsaT4KPC9TSU5BPgo8L1ByZXN0YXppb25pU29jaWFsaT4KPFByZXN0YXppb25pU29jaWFsaSBDYXJhdHRlcmVQcmVzdGF6aW9uZT0iMiIgSW1wb3J0b1F1b3RhVXRlbnRlPSIxNTUuNTYiIEltcG9ydG9RdW90YVJpY2hpZXN0YT0iMzUxLjY0IiBUaXBvT3BlcmF6aW9uZT0iSSIgRGF0YUVyb2dhemlvbmVQcmVzdGF6aW9uZT0iMjAyMC0xMi0wMSIgSW1wb3J0b1ByZXN0YXppb25lPSIxMjY1LjIzIiBDb2RpY2VQcmVzdGF6aW9uZT0iQTEuMDkiIERlbm9taW5hemlvbmVQcmVzdGF6aW9uZT0iVGVsZXNvY2NvcnNvIGUgdGVsZWFzc2lzdGVuemEiIFByb3RvY29sbG9Eb21hbmRhPSJ0ZXN0IiBEYXRhRXZlbnRvPSIyMDIwLTEwLTEzIiBJbXBvcnRvUXVvdGFTU049IjE0MS45OCIgSW1wb3J0b1NvZ2xpYUlTRUU9IjM0MzA4LjAiIFByZXNhQ2FyaWNvPSIyIiBJbXBvcnRvUXVvdGFFbnRlPSI5NjcuNjkiIFByZXNlbnphUHJvdmFNZXp6aT0iMiIgT3JlU2Vydml6aW9NZW5zaWxlPSIyLjU5Ij4gPC9QcmVzdGF6aW9uaVNvY2lhbGk+CjwvQmVuZWZpY2lhcmlvPgo8L0ZsdXNzbz4=
                    - codice_ente: H501
                      denominazione_ente: Comune di Roma
                      id_flusso: H501.PS.20210520.00000004
                      ts_flusso: "2023-11-27T11:04:56.852Z"
                      tipo: SINBA
                      flusso: >-
                       PEZsdXNzbyB4bWxucz0iaHR0cDovL2lucHMuaXQvQ2FzZWxsYXJpbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vaW5wcy5pdC9DYXNlbGxhcmlvIj4KPElkZW50aWZpY2F6aW9uZUZsdXNzbyBOb21lPSJINTAxLlNJTkJBLjIwMjEwNTIwLjAwMDAwMDA0Ij4KPEVudGUgQ29kaWNlPSJINTAxIiBEZW5vbWluYXppb25lPSJDT01VTkUgREkgUk9NQSIgQ0ZPcGVyYXRvcmU9IkdIQkxERTI1QTQySDE5OVgiIEluZGlyaXp6bz0iSDUwMSIvPgo8L0lkZW50aWZpY2F6aW9uZUZsdXNzbz4KPFNJTkJBIFZhbHV0YXppb25lRmFtaWdsaWFNaW5vcmU9IjEiIEFubm9OYXNjaXRhPSIyMDA1IiBOdW1lcm9Db21wb25lbnRpSVNFRT0iOSIgQ29kaWNlTmF6aW9uZVJlc2lkZW56YT0iMzgwIiBJbnZDaXZDZXJ0aWZpY2F6aW9uaT0iMSIgVmFsdXRhemlvbmVNaW5vcmU9IjEiIE1pbm9yZVN0cmFuaWVyb05vQWNjPSIxIiBMdW9nb1ZpdGE9IjEiIFByb3Z2ZWRpbWVudG9HaXVkaXppYXJpbz0iMSIgRGF0YVByb3Z2ZWRpbWVudG9HaXVkaXppYXJpbz0iMDMvMjAxMiIgQXV0b3JpdGFQcm92dmVkaW1lbnRvPSIxIiBDb25kaXppb25lTGF2b3JvPSIxIiBDb25kaXppb25lTWlub3JlPSIxIiBEaXNhYmlsaXRhPSIxIiBUaXBvRGlzYWJpbGl0YT0iMSIgRm9udGVTZWduYWxhemlvbmU9IjEiIERhdGFQcmltYVNlZ25hbGF6aW9uZT0iMDEvMjAxMCIgRmFzY2lhRXRhQmVuZWZpY2lhcmlvPSIyIiBTZWduYWxhemlvbmVBdXRvcml0YUdpdWRpemlhcmlhPSIxIiBEYXRhU2VnbmFsYXppb25lPSIwNi8yMDE2IiBGYXNjaWFJU0VFQmVuZWZpY2lhcmlvPSIxIiBTY3VvbGFGcmVxdWVudGF0YT0iMSIgSURCZW5lZmljaWFyaW89IlBST1ZBIEJFTkVGIj4KPFByZXN0YXppb25pPgo8Q29kaWNlUHJlc3RhemlvbmU+QTEuMDI8L0NvZGljZVByZXN0YXppb25lPgo8Q29kaWNlUHJlc3RhemlvbmU+QTIuMDY8L0NvZGljZVByZXN0YXppb25lPgo8L1ByZXN0YXppb25pPgo8RmFtaWdsaWE+CjxDb21wb3NpemlvbmVGYW1pZ2xpYT4xPC9Db21wb3NpemlvbmVGYW1pZ2xpYT4KPENvbXBvc2l6aW9uZUZhbWlnbGlhPjI8L0NvbXBvc2l6aW9uZUZhbWlnbGlhPgo8L0ZhbWlnbGlhPgo8L1NJTkJBPgo8L0ZsdXNzbz4=
                RispostaVuota:
                  value:
                    elenco_flussi: []
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/default'
  /esiti:
    post:
      summary: "Notifica degli esiti delle elaborazioni"
      description: |- 
        Periodicamente INPS invoca la risorsa '/esiti' per notificare il risultato dell'elaborazione dei flussi ricevuti dall'Ente, inserendo nel payload un elenco di esiti.
        Ciascuna richiesta di notifica sarà considerata consegnata se l’Ente risponde con un codice HTTP 2xx ed esclusa dalle successive iterazioni del processo di notifica.
        Nel caso l’ente risponda con un codice HTTP diverso da 2xx, la notifica verrà ritentata nelle successive iterazioni. 
        E’ onere dell’Ente individuare il codice di risposta opportuno per guidare il processo di rispedizione in base alle proprie logiche interne.
      operationId: NotificaEsiti
      tags:
        - Esiti
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElencoEsiti'
            example:
              elenco_esiti:
                - id_flusso: H501.PS.20210520.0000002
                  ts_flusso: "2023-11-27T11:04:56.852Z"
                  ts_acquisizione: "2023-11-27T11:04:56.852Z"
                  tipo: PS_PSA_SINA
                  codice_esito: 'OK'
                  id_acquisizione_siuss: "22738"
                - id_flusso: H501.PS.20210520.00000004
                  ts_flusso: "2023-11-27T11:04:56.852Z"
                  ts_acquisizione: "2023-11-27T11:04:56.852Z"
                  tipo: SINBA
                  codice_esito: 'RICHIESTA_INVALIDA'
                  descrizione_esito: "In cooperazione è possibile inviare solo un beneficiario e una prestazione sociale"
      responses:
        '204':
          description: "Notifica recepita con successo"
        default:
          description: "Notifica non recepita"
          content:
            application/problem+json:
              schema:
                  $ref: '#/components/schemas/Problem'
  /status:
    get:
      summary: "Ritorna lo stato dell'applicazione"
      operationId: healthCheck
      tags:
      - Flussi
      description: "Ritorna lo stato dell'applicazione in formato problem+json"
      responses:
        '200':
          description: "Il servizio funziona correttamente"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: "Il server ha riscontrato un problema"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  securitySchemes:
    PDND:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |-
        Access token rilasciato dalla PDND conforme
        alle indicazioni di sicurezza contenute in [RFC8725](https://tools.ietf.org/html/RFC8725).
  schemas:
    UnixTimestamp:
      description: >-
        Timestamp in millisecondi relativo alla data di ultima modifica del flusso. Tale dato viene utilizzato per il
        confronto con il parametro `since` al fine di determinare la successione cronologica degli
        aggiornamenti.
      type: integer
      format: int64
      example: 1490000000000
      minimum: 0
      maximum: 1e+20
      xml:
        name: UnixTimestamp
    Flusso:
      type: object
      additionalProperties: false
      properties:
        codice_ente:
          type: string
          description:
            Codice Belfiore, identificativo dell'ente che ha generato il flusso.
          pattern: '^[A-Z][0-9]{3}$'
          example: H501
          maxLength: 4
          minLength: 4
        denominazione_ente:
          type: string
          description: Denominazione dell'ente che ha generato il flusso.
          maxLength: 256
          example: "Comune di Roma"
        id_flusso:
          description: >-
            Protocollo di identificazione del flusso. L'identificativo ha la seguente struttura: 'EEEEE.TIPO.AAAAMMGG.NNNNNNN', dove:
            - EEEEE è il codice dell'ente erogatore secondo la codifica prevista dal sistema di accesso dell’INPS
            - TIPO il formato utilizzato (SINBA o PS)
            - AAAAMMGG è la data di creazione del flusso
            - NNNNNNN è un progressivo giornaliero
          type: string
          example: "H501.PS.20160423.0000001"
          maxLength: 64
        tipo:
          $ref: '#/components/schemas/TipoFlusso'
        ts_flusso:
          type: string
          format: date-time
        flusso:
          type: string
          format: byte
          description: |-
            Contiene il flusso in formato xml, codificato in base64. Gli XSD di riferimento per la creazione di un flusso sono:
              - [PS_PSA2016_SINA.xsd](https://www.inps.it/docallegatiNP/Mig/Dati_analisi_bilanci/casellario_assistenza/PS_PSA_SINA201812.xsd)
              - [SINBA.xsd](https://www.inps.it/docallegatiNP/Mig/Dati_analisi_bilanci/casellario_assistenza/SINBA.xsd)
          maxLength: 10000000  # 10MB
          example: "PEZsdXNzbyB4bWxucz0iaHR0cDovL2lucHMuaXQvQ2FzZWxsYXJpbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+ICAKICAgICAgICA8SWRlbnRpZmljYXppb25lRmx1c3NvIE5vbWU9Ikg1MDEuUFMuSU5QUy4yMDE2MDQyMy4xMTUyMzUiPiAgCiAgICAgICAgICAgICAgICA8RW50ZSBEZW5vbWluYXppb25lPSJDb211bmUgZGkgUm9tYSIgQ29kaWNlPSJINTAxIiBDRk9wZXJhdG9yZT0iWFhYWFhYODBQMjBCNTAxQiIgSW5kaXJpenpvPSJINTAxIi8+ICAKICAgICAgICA8L0lkZW50aWZpY2F6aW9uZUZsdXNzbz4gIAogICAgICAgIDxCZW5lZmljaWFyaW8gQ29kaWNlRmlzY2FsZT0iUlNTTVJLNjZDMTRINTAxVSI+ICAKICAgICAgICAgICAgICAgIDxBbmFncmFmaWNhIEFubm9OYXNjaXRhPSIxOTY2IiBHZW5lcmU9IjEiIENvZGljZUNpdHRhZGluYW56YT0iMzgwIiBOb21lPSJNSVJLTyIgQ29kaWNlU2Vjb25kYUNpdHRhZGluYW56YT0iMzgwIiBMdW9nb05hc2NpdGE9Ikg1MDEiIENvZ25vbWU9IlJPU1NJIi8+ICAKICAgICAgICAgICAgICAgIDxJbmRpcml6em8gQ29kaWNlQ29tdW5lPSIwNjgwMDEiIENvZGljZU5hemlvbmU9IjM4MCIgQ29kaWNlUmVnaW9uZT0iMDEiLz4gIAogICAgICAgICAgICAgICAgPFByZXN0YXppb25pU29jaWFsaSBDYXJhdHRlcmVQcmVzdGF6aW9uZT0iMSIgQXJlYVV0ZW56YT0iMiIgSW1wb3J0b1F1b3RhVXRlbnRlPSIwLjAiIEltcG9ydG9RdW90YVJpY2hpZXN0YT0iMC4wIiBUaXBvT3BlcmF6aW9uZT0iSSIgRGF0YUluaXppb1ByZXN0YXppb25lPSIyMDE1LTA4LTEzIiBDb2RpY2VQcmVzdGF6aW9uZT0iQTIuMTYiIERlbm9taW5hemlvbmVQcmVzdGF6aW9uZT0iSW50ZXJ2ZW50aSBkaSBzdXBwb3J0byBwZXIgcmVwZXJpbWVudG8gYWxsb2dnaSIgUHJvdG9jb2xsb0RvbWFuZGE9IlByb3RvY29sbG8gZml0dGl6aW8iIERhdGFFdmVudG89IjIwMTYtMTAtMTMiIEltcG9ydG9NZW5zaWxlPSIyMDAuMCIgSW1wb3J0b1F1b3RhU1NOPSIwLjAiIFBlcmlvZG9Fcm9nYXppb25lPSIxIiBJbXBvcnRvU29nbGlhSVNFRT0iMC4wIiBQcmVzYUNhcmljbz0iMSIgRGF0YUZpbmVQcmVzdGF6aW9uZT0iMjAxNi0wOC0xMyIgSW1wb3J0b1F1b3RhRW50ZT0iMC4wIiBQcmVzZW56YVByb3ZhTWV6emk9IjIiIE9yZVNlcnZpemlvTWVuc2lsZT0iMiI+ICAKICAgICAgICAgICAgICAgICAgICAgICAgPFNJTkEgTmVjZXNzaXRhQ3VyZVNhbml0YXJpZT0iMSIgRm9udGVEZXJpdmF6aW9uZUludmFsaWRpdGE9IjEiIEFyZWFSZWRkaXR1YWxlPSIxIiBTdHJ1bWVudG9WYWx1dGF6aW9uZT0iMSIgRm9udGVEZXJpdmF6aW9uZVZhbHV0YXppb25lPSIxIiBBcmVhU3VwcG9ydG89IjEiIE1vYmlsaXRhPSIxIiBEaXN0dXJiaUNvbXBvcnRhbWVudGFsaT0iMSIgQXR0aXZpdGFWaXRhUXVvdGlkaWFuYT0iMSI+ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TmVjZXNzaXRhSW50ZXJ2ZW50aVNvY2lhbGk+ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb2RpY2VQcmVzdGF6aW9uZT5BMS4wMTwvQ29kaWNlUHJlc3RhemlvbmU+ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb2RpY2VQcmVzdGF6aW9uZT5BMS4wMjwvQ29kaWNlUHJlc3RhemlvbmU+ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L05lY2Vzc2l0YUludGVydmVudGlTb2NpYWxpPiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEludmFsaWRpdGFDaXZpbGU+ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJbnZDaXY+MTwvSW52Q2l2PiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW52Q2l2PjI8L0ludkNpdj4gIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvSW52YWxpZGl0YUNpdmlsZT4gIAogICAgICAgICAgICAgICAgICAgICAgICA8L1NJTkE+ICAKICAgICAgICAgICAgICAgIDwvUHJlc3RhemlvbmlTb2NpYWxpPiAgCiAgICAgICAgPC9CZW5lZmljaWFyaW8+ICAKPC9GbHVzc28+"
    Entries:
      type: object
      additionalProperties: false
      properties:
        elenco_flussi:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/Flusso'
    ElencoEsiti:
      type: object
      additionalProperties: false
      properties:
        elenco_esiti:
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/EsitoFlusso'
    EsitoFlusso:
      type: object
      required:
        - id_flusso
        - tipo
        - ts_flusso
        - ts_acquisizione
        - codice_esito
      properties:
        id_flusso:
          type: string
          description: "ID del flusso"
        tipo:
          type: string
          description: "Tipo di flusso (PS_PSA_SINA o SINBA)"
        ts_flusso:
          type: string
          format: date-time          
        ts_acquisizione:
          type: string
          format: date-time
          description: "Data di esecuzione dell'operazione di acquisizione flussi"
        codice_esito:
          type: string
          enum: ["OK","DATI_NON_TROVATI","RICHIESTA_INVALIDA","ERRORE_GENERICO"]
          description: "Esito dell'operazione di pubblicazione sul SIUSS"
        descrizione_esito:
          type: string
          description: "Dettaglio dell'esito"    
        id_acquisizione_siuss:
          type: string
          description: "Codice di acquisizione del flusso assegnato dal SIUSS. Valorizzato solo in caso di esito `OK`"
    TipoFlusso:
      type: string
      description: Tipologia di ﬂusso. I valori ammessi sono “PS\_PSA\_SINA” o “SINBA”.
      enum: [PS_PSA_SINA, SINBA]
      example: PS_PSA_SINA
    Problem:
      type: "object"
      additionalProperties: false
      properties:
        detail:
          type: "string"
          description: "Un testo di descrizione comprensibile del problema occorso"
          example: "Connection to database timed out"
          maxLength: 4096
        instance:
          type: "string"
          description: "Collegamento ad una specifica occorrenza dove si è verificato il problema"
          format: "uri"
          maxLength: 4096
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: "integer"
          description: "Codice http restituito"
          format: "int32"
          example: 503
        title:
          type: "string"
          description: "Descrizione breve ed esplicativa del problema occorso"
          maxLength: 4096
        type:
          type: "string"
          description: "URI assoluta per la descrizione del problema occorso"
          format: "uri"
          example: "https://tools.ietf.org/html/rfc7231#section-6.6.4"
          default: "about:blank"
          maxLength: 4096
  responses:
    "400BadRequest":
      description: "Bad Request"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "401Unauthorized":
      description: "Non sono state fornite le credenziali necessarie"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "403Forbidden":
      description: "Autorizzazione non concessa per l'operazione richiesta"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "404NotFound":
      description: "Not Found"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "409Conflict":
      description: "Conflict (L'entità che si vuole creare risulta già esistente)"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "429TooManyRequests":
      description: "Too many requests"
      headers:
        Retry-After:
          $ref: "#/components/headers/Retry-After"
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "503ServiceUnavailable":
      description: "Service Unavailable"
      headers:
        Retry-After:
          $ref: "#/components/headers/Retry-After"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    default:
      description: "Unexpected error"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
  headers:
    Retry-After:
      description: "Riprovare dopo un attesa minima di tot secondi. Vedi https://tools.ietf.org/html/rfc7231#section-7.1.3"
      schema:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 3600
    X-RateLimit-Limit:
      description: "Numero massimo di richieste accettate nell'intervallo corrente"
      schema:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 100000
    X-RateLimit-Remaining:
      description: "Numero di richieste residue nell'intervallo corrente"
      schema:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 100000
    X-RateLimit-Reset:
      description: "Numero di secondi al completamento dell'intervallo corrente"
      schema:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 3600

